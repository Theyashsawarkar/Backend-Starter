#!/usr/bin/env node

import http from 'http';
import app from '../app.js';
import { onServerError, onServerListening } from '../utils/errorHandler.js';
import logger from '../utils/logger.js';
import config from 'config';

// Get port from environment variables
const port = normalizePort(process.env.PORT || config.get('server.port') || '3000');
app.set('port', port);

// Create HTTP server
const server = http.createServer(app);

// Start listening
server.listen(port);
server.on('error', (error) => onServerError(error, port));
server.on('listening', () => onServerListening(server));

// Graceful shutdown
process.on('SIGINT', () => shutdown('SIGINT'));
process.on('SIGTERM', () => shutdown('SIGTERM'));

function shutdown(signal) {
  logger.info(`Received ${signal}. Shutting down gracefully...`);
  server.close(() => {
    logger.info('HTTP server closed.');
    process.exit(0);
  });
}

// Normalize a port into a number or named pipe
function normalizePort(value) {
  const portNumber = Number(value); // convert to number

  if (Number.isNaN(portNumber)) return value; // treat as named pipe
  if (portNumber >= 0) return portNumber; // valid port number

  throw new Error(`Invalid port: ${value}`);
}
